# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # Makes classes in the API available to be used as services. This creates a
    # service per class whose id is the fully-qualified class name.
    App\GraphQL\Input\:
        resource: '../src/GraphQL/Input'
        public: true

    App\GraphQL\Resolver\:
        resource: '../src/GraphQL/Resolver'
        public: true

    App\GraphQL\Type\:
        resource: '../src/GraphQL/Type'
        public: true

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\Controller\GraphQLApiController:
        arguments: ['@App\GraphQL\ExplorerRenderer', '@graphql_api_request_handler']
        tags: ['controller.service_arguments']

    App\GraphQL\ExplorerRenderer: ~

    App\GraphQL\RequestHandlerFactory:
        arguments: ['@service_container']

    graphql_api_request_handler:
        class: 'App\GraphQL\RequestHandler'
        factory: ['@App\GraphQL\RequestHandlerFactory', 'createRequestHandler']
        arguments:
            - '@cache.app'
            - 'App\GraphQL\Resolver\'
            - 'App\GraphQL\'